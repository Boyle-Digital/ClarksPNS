name: Merge PR at Midnight ET (Nov 1, 2025)

on:
  schedule:
    # Runs at 04:15 UTC on Nov 1 (which is 12:15 AM ET)
    - cron: '15 4 1 11 *'

permissions:
  contents: write
  pull-requests: write

env:
  # We're identifying the PR by its head branch name:
  PR_HEAD_BRANCH: "nov-1-change"
  PR_BASE_BRANCH: "main"
  TARGET_UTC_DATE: "2025-11-01"

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Exit unless today is the target UTC date
        run: |
          d=$(date -u +%F)
          if [ "$d" != "${TARGET_UTC_DATE}" ]; then
            echo "Today is $d UTC, not ${TARGET_UTC_DATE}. Exiting."
            exit 0
          fi

      - name: Find open PR from nov-1-change into main
        id: find_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const head = `${context.repo.owner}:${process.env.PR_HEAD_BRANCH}`;
            const { data: prs } = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              base: process.env.PR_BASE_BRANCH,
              head
            });
            if (prs.length === 0) {
              core.setFailed(`No open PR from ${head} into ${process.env.PR_BASE_BRANCH} found.`);
            } else {
              core.setOutput('pr_number', prs[0].number);
            }

      - name: Check PR mergeability
        id: check_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = Number('${{ steps.find_pr.outputs.pr_number }}');
            const { data: pr } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            });
            if (pr.mergeable === false) {
              core.setFailed(`PR #${pr_number} is not mergeable (conflicts or checks failing).`);
              return;
            }
            core.notice(`PR #${pr_number} mergeable_state=${pr.mergeable_state}. Proceeding.`);

      - name: Merge the PR (squash)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = Number('${{ steps.find_pr.outputs.pr_number }}');
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
              merge_method: 'squash'
            });
            core.notice(`âœ… Merged PR #${pr_number} into main.`)
